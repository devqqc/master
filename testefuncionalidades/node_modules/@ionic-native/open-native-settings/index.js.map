{"version":3,"sources":["../../../src/@ionic-native/plugins/open-native-settings/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,iBAAA,EAAmB,OAAA,EAAQ,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwFG;AASH,IAAa,kBAAkB;IAAS,sCAAiB;IAAzD;;IAgBA,CAAC;IAdC;;;;OAIG;IAEH,iCAAI,GAAJ,UAAK,OAAe,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQjD,yBAAC;AAAD,CAhBA,AAgBC,CAhBuC,iBAAiB,GAgBxD;AANM,6BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,iCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IADC,OAAO,EAAE;;;;8CACqC;AARpC,kBAAkB;IAR9B,MAAM,CAAC;QACN,UAAU,EAAE,oBAAoB;QAChC,MAAM,EAAE,8BAA8B;QACtC,SAAS,EAAE,0BAA0B;QACrC,IAAI,EAAE,yDAAyD;QAC/D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,kBAAkB,CAgB9B;SAhBY,kBAAkB","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, IonicNativePlugin, Cordova } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @name Open Native Settings\r\n * @description\r\n * Plugin to open native screens of iOS/android settings \r\n * @usage \r\n * You can open any of these settings:\r\n * ```\r\n * \"about\", // ios\r\n    \"accessibility\", // ios, android\r\n    \"account\", // ios, android\r\n    \"airplane_mode\", // ios, android\r\n    \"apn\", // android\r\n    \"application_details\", // ios, android\r\n    \"application_development\", // android\r\n    \"application\", // android\r\n    \"autolock\", // ios\r\n    \"battery_optimization\", // android\r\n    \"bluetooth\", // ios, android\r\n    \"castle\", // ios\r\n    \"captioning\", // android\r\n    \"cast\", // android\r\n    \"cellular_usage\", // ios\r\n    \"configuration_list\", // ios\r\n    \"data_roaming\", // android\r\n    \"date\", // ios, android\r\n    \"display\", // ios, android\r\n    \"dream\", // android\r\n    \"facetime\", // ios\r\n    \"home\", // android\r\n    \"keyboard\", // ios, android\r\n    \"keyboard_subtype\", // android\r\n    \"locale\", // ios, android\r\n    \"location\", // ios, android\r\n    \"locations\", // ios\r\n    \"manage_all_applications\", // android\r\n    \"manage_applications\", // android\r\n    \"memory_card\", // android\r\n    \"music\", // ios\r\n    \"music_equalizer\", // ios\r\n    \"music_volume\", // ios\r\n    \"network\", // ios, android\r\n    \"nike_ipod\", // ios\r\n    \"nfcsharing\", // android\r\n    \"nfc_payment\", // android\r\n    \"nfc_settings\", // android\r\n    \"notes\", // ios\r\n    \"notification_id\", // ios\r\n    \"passbook\", // ios\r\n    \"phone\", // ios\r\n    \"photos\", // ios\r\n    \"print\", // android\r\n    \"privacy\", // android\r\n    \"quick_launch\", // android\r\n    \"reset\", // ios\r\n    \"ringtone\", // ios\r\n    \"browser\", // ios\r\n    \"search\", // ios, android\r\n    \"security\", // android\r\n    \"settings\", // ios, android\r\n    \"show_regulatory_info\",\r\n    \"sound\", // ios, android\r\n    \"software_update\", // ios\r\n    \"storage\", // ios, android\r\n    \"store\", // ios, android\r\n    \"sync\", // android\r\n    \"tethering\", // ios\r\n    \"twitter\", // ios\r\n    \"touch\", // ios\r\n    \"usage\", // ios, android\r\n    \"user_dictionary\", // android\r\n    \"video\", // ios\r\n    \"voice_input\", // android\r\n    \"vpn\", // ios\r\n    \"wallpaper\", // ios\r\n    \"wifi_ip\", // android\r\n    \"wifi\", // ios, android\r\n    \"wireless\" // android\r\n    ``` \r\n * ```typescript\r\n * import { OpenNativeSettings } from '@ionic-native/open-native-settings';\r\n *\r\n *\r\n * constructor(private openNativeSettings: OpenNativeSettings) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'OpenNativeSettings',\r\n  plugin: 'cordova-open-native-settings',\r\n  pluginRef: 'cordova.plugins.settings',\r\n  repo: 'https://github.com/guyromb/Cordova-open-native-settings',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class OpenNativeSettings extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Opens a setting dialog\r\n   * @param setting {string} setting name\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  open(setting: string): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}