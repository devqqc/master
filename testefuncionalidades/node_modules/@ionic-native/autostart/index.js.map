{"version":3,"sources":["../../../src/@ionic-native/plugins/autostart/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;;;;;;GAoBG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IAoBA,CAAC;IAlBC;;OAEG;IAEH,0BAAM,GAAN,cAAiB,CAAC;IAElB;;OAEG;IAEH,2BAAO,GAAP,cAAkB,CAAC;IAQrB,gBAAC;AAAD,CApBA,AAoBC,CApB8B,iBAAiB,GAoB/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAbA;IADC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;uCACN;AAMlB;IADC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;wCACL;AAZR,SAAS;IARrB,MAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,0BAA0B;QAClC,SAAS,EAAE,2BAA2B;QACtC,IAAI,EAAE,uDAAuD;QAC7D,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,SAAS,CAoBrB;SApBY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @name Autostart\r\n * @description\r\n * This plugin will start automatically your Android app after the every boot or the auto-update of your application.\r\n * You can enable or disable the autostart function in your app.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Autostart } from '@ionic-native/autostart';\r\n *\r\n *\r\n * constructor(private autostart: Autostart) { }\r\n *\r\n * ...\r\n *\r\n * this.autostart.enable();\r\n *\r\n * this.autostart.disable();\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Autostart',\r\n  plugin: 'cordova-plugin-autostart',\r\n  pluginRef: 'cordova.plugins.autoStart',\r\n  repo: 'https://github.com/ToniKorin/cordova-plugin-autostart',\r\n  platforms: ['Android']\r\n})\r\n\r\nexport class Autostart extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Enable the automatic startup after the boot\r\n   */\r\n  @Cordova({ sync: true })\r\n  enable(): void { }\r\n\r\n  /**\r\n   * Disable the automatic startup after the boot\r\n   */\r\n  @Cordova({ sync: true })\r\n  disable(): void { }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}